defmodule Converter.Application do
  # See https://hexdocs.pm/elixir/Application.html
  # for more information on OTP Applications
  @moduledoc false

  use Application

  @impl true
  def start(_type, _args) do
    children = [
      # Starts a worker by calling: Converter.Worker.start_link(arg)
      # {Converter.Worker, arg}
    ]

    # See https://hexdocs.pm/elixir/Supervisor.html
    # for other strategies and supported options
    opts = [strategy: :one_for_one, name: Converter.Supervisor]
    Supervisor.start_link(children, opts)

    ["nvdcve-1.1-2017.json", "nvdcve-1.1-2019.json", "nvdcve-1.1-2021.json"]
    |> Enum.each(fn file_name ->
      spawn(fn -> Converter.Reader.read_json(file_name) end)
    end)

    {:ok, self()}
  end
end
